{
  "title": "Why discipline is important for designers?",
  "tag": "FRONTEND",
  "lang": "EN",
  "date": "04-08-2024",
  "text": "<br/><p>I've had the opportunity to work at different companies, each with different approaches to design, tools, and culture around managing and maintaining layouts. I often had to work with other people's design, aka 'creative chaos'. Diving into a task and searching for the needed layout took up a lot of valuable time and energy that could have been spent more efficiently.</p><br /><br /><p>When looking at the problem from the outside, it doesn't seem all that serious. But if you delve deeper into the situation and look more closely, additional issues emerge:</p><ul><li><strong>Low productivity:</strong> Extra time is spent studying and immersing into the design. In the future, it will be challenging to find relevant designs.</li><li><strong>Work quality:</strong> The inability to focus on details due to chaos can affect the design quality. Errors or omissions may occur due to a lack of attention to detail.</li><li><strong>Stress and fatigue:</strong> Constantly battling chaos can be a source of stress and fatigue, which in turn can negatively impact the creative process.</li><li><strong>Development and testing delays:</strong> Due to 'creative chaos', onboarding developers and testers will be really difficult.</li></ul><br /><br /><br /><br /><h3><strong>Best Practices for designers:</strong></h3><br /><br /><p><strong>Consistent Naming Conventions:</strong></p><p>Use a consistent and logical naming system throughout your project. Example: <code>btn/primary/large</code>, <code>icon/navigation/home</code>.</p><br /><br /><p><strong>Hierarchical Naming:</strong></p><p>Reflect the structure and relationships between elements in your naming. Example: <code>header/nav</code>, <code>header/nav/item</code>, <code>footer/social</code>.</p><br /><br /><p><strong>Descriptive Names:</strong></p><p>Use names that describe the element’s purpose and function. Example: <code>btn-submit</code>, <code>icon-arrow-left</code>.</p><br /><br /><p><strong>Use Prefixes:</strong></p><p>Use prefixes to categorize elements by type. Example: <code>btn-</code>, <code>icon-</code>, <code>card-</code>.</p><br /><br /><p><strong>Avoid Special Characters:</strong></p><p>Stick to alphanumeric characters and hyphens/underscores. Avoid spaces and special characters. Example: <code>user-profile</code>, not <code>user@profile</code>.</p><br /><br /><p><strong>Use Frames and Sections:</strong></p><p>Organize your designs into frames and sections to keep related elements together. Example: Create frames for each screen or component state.</p><br /><br /><p><strong>Component and Instance Usage:</strong></p><p>Utilize components and instances to maintain consistency and ease updates. Example: Create a button component and use instances throughout your design.</p><br /><br /><p><strong>Style Guide and Design System:</strong></p><p>Develop and adhere to a style guide or design system for colors, typography, and spacing. Example: Use defined text styles like <code>Heading 1</code>, <code>Body</code>, and color styles like <code>Primary</code>, <code>Secondary</code>.</p><br /><br /><p><strong>Layer Grouping:</strong></p><p>Group related layers to keep the layer panel organized. Example: Group layers for a card component: <code>card-header</code>, <code>card-content</code>, <code>card-footer</code>.</p><br /><br /><p><strong>Clear Layer Hierarchy:</strong></p><p>Structure layers logically, reflecting the visual hierarchy and grouping. Example: <code>Navbar</code>, <code>Navbar/Logo</code>, <code>Navbar/Menu</code>, <code>Navbar/Menu/Item</code>.</p><br /><br /><p><strong>Page Organization:</strong></p><p>Separate different design stages or types of content into different pages. Example: <code>Wireframes</code>, <code>Designs</code>, <code>Prototypes</code>.</p><br /><br /><p><strong>Use of Auto Layout:</strong></p><p>Use Auto Layout to create flexible and responsive designs. Example: Create a button with Auto Layout to adjust padding automatically.</p><br /><br /><p><strong>Annotations and Notes:</strong></p><p>Use comments and notes to provide context and explanations for complex designs. Example: Add a note explaining the interaction flow on a prototype.</p><br /><br /><p><strong>Version Control:</strong></p><p>Regularly save versions and document changes to track design evolution. Example: Use Figma’s version history to keep track of major changes.</p><br /><br /><p><strong>Clean Up Regularly:</strong></p><p>Periodically review and clean up unused components, layers, and styles. Example: Remove old versions of components that are no longer in use.</p><br /><br />"
}
